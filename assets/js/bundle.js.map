{"version":3,"sources":["Dom.js","Map.js","Poll.js","Sparql.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxfile":"bundle.js","sourcesContent":["var Dom = (function () {\n\n  // DOM CACHING\n  var $title = $('.title');\n  var $peopleHeader = $('.people-header');\n  var $paperHeader = $('.paper-header');\n  var $peopleList = $('.people-list');\n  var $paperList = $('.paper-list');\n  var $mainSearch = $('#main-search');\n  var $navSearch = $('#nav-search');\n  var $conference = $('.conference');\n  var $belt = $('.belt');\n\n  // clears all data off page\n  function clear() {\n\n    $title.empty();\n    $peopleHeader.empty();\n    $paperHeader.empty();\n    $peopleList.empty();\n    $paperList.empty();\n    $mainSearch.val('');\n    $navSearch.val('');\n    $conference.text('Conference');\n    $conference.attr('data-value', 'null');\n    for (var i in Map.markers) {\n      Map.removeLayer(Map.markers[i]);\n    }\n    Map.markers = [];\n  }\n\n  function slide(direction){\n    if(direction === 'left'){\n      $belt.css('left', '0%');\n      window.location.hash = '';\n      $navSearch.hide();\n    } else if (direction === 'right') {\n      $belt.css('left', '-100%');\n      $navSearch.show();\n    }\n  }\n\n  // DOM BINDINGS\n  $(document).ready(function () {\n\n    // onclick  for home page\n    $('.navbar-brand').click(function () {\n      slide('left');\n    });\n\n    // dropdown selects\n    $(document.body).on('click', '.dropdown-menu li', function (event) {\n      //event.preventDefault();\n      var $target = $(event.currentTarget);\n\n      $target\n        .closest('.btn-group')\n        .find('[data-bind=\"label\"]')\n        .text($target.text())\n        .attr('data-value', $target.data('value'))\n        .end()\n        .children('.dropdown-toggle')\n        .dropdown('toggle');\n      return false;\n    });\n\n  });\n\n  return {\n    clear: clear,\n    slide: slide\n  };\n})();\n","var Map = (function () {\n\n  // PRIVATE\n  var markers = [];\n  var pin = L.icon({\n    iconUrl: 'assets/icons/circle.png',\n    iconSize: [10, 10],\n    iconAnchor: [5, 5]\n  });\n  var map = createMap();\n\n  function createMap(center) {\n    if (!center) {\n      if ($(window).width() < 700) {\n        center = [40, -95]; // center on USA\n      } else {\n        center = [22, -7]; // center between North America and Europe\n      }\n    }\n    return L.map('map', {\n      center: center,\n      zoom: 2,\n      scrollWheelZoom: false\n    });\n  }\n\n  // might need to doc ready this\n  L.tileLayer(\n    'http://a.tiles.mapbox.com/v4/amaldare93.mbpl53l0/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiYW1hbGRhcmU5MyIsImEiOiJGdEFlcHpZIn0.0WX3tspKb0IXCJbdGMLmNQ', {\n      attribution: 'Map tiles by <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n    }).addTo(map);\n\n  // CREATE MAP PIN\n  function setPin(data) {\n    // extract lat and long\n    var latlong = data.latlong.value.split(' ');\n    // create map marker\n    var marker = L.marker(\n      [parseFloat(latlong[0]), parseFloat(latlong[1])], {\n        icon: pin,\n        title: data.name.value\n      }).addTo(map);\n\n    // selectAffiliation\n    $(marker).click(function () {\n      Poll.setHash('<' + data.link.value + '>');\n    });\n\n    // push marker into array (for later deletion)\n    markers.push(marker);\n  }\n\n  return {\n    // API\n    setPin: setPin\n  };\n})();\n","var Poll = (function () {\n\n  var lastHash = '';\n\n  // checks hash and loads page accordingly\n  function pollHash() {\n    if (window.location.hash != lastHash) {\n      lastHash = window.location.hash;\n      var key = '<http://spatial.linkedscience.org/context/' + lastHash.slice(1) + '>';\n\n      $('.belt').css('left', '-100%');\n      if (lastHash.length < 2) {\n        Dom.clear();\n      } else if (lastHash[1] == 'p') {\n        Sparql.selectAuthor(key);\n      } else if (lastHash[2] == 'f') {\n        Sparql.selectAffiliation(key);\n      } else {\n        Sparql.selectPaper(key);\n      }\n    }\n  }\n\n  function setHash(hash) {\n    window.location.hash = hash.slice(42, -1);\n  }\n\n  $(document).ready(function () {\n\n    pollHash();\n    setInterval(pollHash, 10);\n\n  });\n\n  return {\n\t\tpollHash: pollHash,\n\t\tsetHash: setHash\n  };\n\n})();\n","var Sparql = (function () {\n\n  // PRIVATE\n  var prefixes =\n    'prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> prefix dc: <http://purl.org/dc/terms/> prefix bibo: <http://purl.org/ontology/bibo/> prefix foaf: <http://xmlns.com/foaf/0.1/> prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> prefix spatial: <http://spatial.linkedscience.org/context/> prefix key: <http://spatial.linkedscience.org/context/keyword/> prefix ADR: <http://www.w3.org/2001/vcard-rdf/3.0#> ';\n\n  // DOM CACHING\n  var $title = $('.title');\n  var $peopleHeader = $('.people-header');\n  var $paperHeader = $('.paper-header');\n  var $peopleList = $('.people-list');\n  var $paperList = $('.paper-list');\n\n  // generate SPARQL query strings\n  // TODO: get Babel and use template strings!\n  function searchQuery(input, conference) {\n    var conference_seg = conference != 'null' ? 'spatial:' + conference : '?g';\n    return prefixes +\n      'SELECT DISTINCT ?type ?link ?name ?year ?latlong ' +\n      '{ ' +\n      'GRAPH ' + conference_seg +\n      '{ ' +\n      '{ ' +\n      '?link foaf:name ?name . ' +\n      'FILTER regex(?name, \"' + input + '\", \"i\") ' +\n      '?link foaf:familyName ?lastName . ' +\n      '?link rdf:type foaf:Person . ' +\n      '?link rdf:type ?type . ' +\n      '}' +\n      'UNION ' +\n      '{ ' +\n      '?link dc:title ?name . ' +\n      'FILTER regex(?name, \"' + input + '\", \"i\") ' +\n      '?link dc:date ?year . ' +\n      '?link rdf:type bibo:Chapter . ' +\n      '?link rdf:type ?type . ' +\n      '} ' +\n      'UNION ' +\n      '{ ' +\n      '?link dc:subject key:' + input.split(' ').join('_') + ' . ' +\n      // TODO: try to use regex for keywords\n      //'FILTER regex(?subject, \"key:' + input + '\", \"i\") ' +\n      '?link dc:title ?title . ' +\n      '?link dc:date ?year . ' +\n      '?link rdf:type bibo:Chapter . ' +\n      '?link rdf:type ?type . ' +\n      '} ' +\n      'UNION ' +\n      '{ ' +\n      '?link foaf:name ?name ; ' +\n      'FILTER regex(?name, \"' + input + '\", \"i\") ' +\n      '?link geo:lat_long ?latlong . ' +\n      '?link rdf:type foaf:Organization . ' +\n      '?link rdf:type ?type . ' +\n      '} ' +\n      '}' +\n      '}' +\n      'ORDER BY DESC(?year) ?title ?lastName';\n  }\n\n  function authorQuery(author) {\n    return prefixes +\n      'SELECT DISTINCT ?name ?paper ?title ?year ?knows ?coname ?type ?affiliation ?latlong ' +\n      '{ ' +\n      'GRAPH ' + '?g ' +\n      '{ ' +\n      '{ ' +\n      author +\n      'foaf:name ?name ; ' +\n      'foaf:publications ?paper . ' +\n      '?paper dc:title ?title . ' +\n      '?paper dc:date ?year . ' +\n      '?paper rdf:type ?type . ' +\n      '} ' +\n      'UNION ' +\n      '{ ' +\n      author + 'foaf:knows ?knows . ' +\n      '?knows foaf:name ?coname . ' +\n      '?knows foaf:familyName ?lastName . ' +\n      '?knows rdf:type ?type . ' +\n      '} ' +\n      'UNION ' +\n      '{ ' +\n      '?affiliation foaf:member ' + author + ' ; ' +\n      'foaf:name ?name ; ' +\n      'geo:lat_long ?latlong ; ' +\n      'rdf:type ?type . ' +\n      '} ' +\n      '} ' +\n      '}' +\n      'ORDER BY DESC(?year) ?title ?lastName';\n  }\n\n  function paperQuery(paper) {\n    return prefixes +\n      'SELECT DISTINCT ?title ?authors ?name ?coauthor ?year ?homepage ?partOf ?subject ?g ' +\n      '{ ' +\n      'GRAPH ' + '?g ' +\n      '{ ' +\n      '{ ' +\n      paper +\n      'dc:title ?title ; ' +\n      'dc:date ?year ; ' +\n      'foaf:homepage ?homepage ; ' +\n      'dc:partOf ?partOf . ' +\n      // need to get list of subjects without returning the same paper n times for each subject\n      //'dc:subject ?subject ; ' +\n      '} ' +\n      'UNION ' +\n      '{ ' +\n      paper + 'bibo:authorList ?list . ' +\n      '?list rdf:rest*/rdf:first ?coauthor . ' +\n      '?coauthor foaf:name ?name . ' +\n      '} ' +\n      '} ' +\n      '}';\n  }\n\n  function affiliationQuery(affiliation) {\n    return prefixes +\n      'SELECT DISTINCT ?link ?name ?latlong ?location ' +\n      '{ ' +\n      '{ ' +\n      affiliation +\n      'foaf:name ?name ; ' +\n      'geo:lat_long ?latlong ; ' +\n      'ADR:ADR ?location . ' +\n      '} ' +\n      'UNION ' +\n      '{ ' +\n      affiliation + 'foaf:member ?members . ' +\n      '?members foaf:name ?name . ' +\n      '} ' +\n      '} ';\n  }\n\n  // Display results to page\n  function renderSearch(json, input, conference) {\n    var results = json.results.bindings,\n      conference_part = conference != 'null' ? ' >> ' + conference : '';\n\n    // No Results:\n    if (results.length === 0) {\n      $title.html('There are no results for <b>' + input + conference_part + '</b>, try searching again.');\n    } else {\n      $title.html('Showing results for: <b>' + input + conference_part + '</b>');\n\n      $peopleHeader.html('<span class=\"icon-user\">Authors</span>');\n      $paperHeader.html('Papers');\n\n      // fill page with data\n      $.each(results, function (i) {\n        if (results[i].type.value == 'http://xmlns.com/foaf/0.1/Person') {\n          $peopleList.append('<li class=\"list-group-item author\"><a href=\"javascript:Poll.setHash(\\'<' + results[i].link.value +\n            '>\\')\">' +\n            results[i].name.value +\n            '</a>&nbsp;<a class=\"rawdata\" target=\"_blank\" title=\"Raw data for this author\" href=\"' + results[i].link.value +\n            '\">&rarr;</a></li>');\n        } else if (results[i].type.value == 'http://purl.org/ontology/bibo/Chapter') {\n          $paperList.append('<li class=\"list-group-item paper\">(' + results[i].year.value +\n            ') <a href=\"javascript:Poll.setHash(\\'<' + results[\n              i].link.value + '>\\')\">' + results[i].name.value +\n            '</a>&nbsp;<a class=\"rawdata\" target=\"_blank\" title=\"Raw data for this paper\" href=\"' + results[i].link.value +\n            '\">&rarr; </a></li>');\n        } else if (results[i].type.value == 'http://xmlns.com/foaf/0.1/Organization') {\n          Map.setPin(results[i]);\n        }\n      });\n    }\n  }\n\n  function renderAuthor(json) {\n    var results = json.results.bindings;\n\n    Dom.clear();\n    $title.html('<b>' + results[0].name.value + '</b>');\n    $paperHeader.html('Papers');\n    $peopleHeader.html('Co-authors/-editors');\n\n    $.each(results, function (i) {\n      if (results[i].type.value == 'http://purl.org/ontology/bibo/Chapter') {\n        $paperList.append('<li class=\"list-group-item paper\">(' + results[i].year.value +\n          ') <a href=\"javascript:Poll.setHash(\\'<' + results[i]\n          .paper.value + '>\\')\">' + results[i].title.value +\n          '</a>&nbsp;<a class=\"rawdata\" target=\"_blank\" title=\"Raw data for this paper\" href=\"' + results[i].paper.value +\n          '\">&rarr;</a></li>');\n      } else if (results[i].type.value == 'http://xmlns.com/foaf/0.1/Person') {\n        $peopleList.append(\"<li class='list-group-item author'><a href='javascript:Poll.setHash(\\\"<\" + results[i].knows.value +\n          \">\\\")'>\" +\n          results[i].coname.value +\n          \"</a>&nbsp;<a class='rawdata' target='_blank' title='Raw data for this author' href='\" + results[i].knows.value +\n          \"'>&rarr;</a></li>\");\n      } else if (results[i].type.value == 'http://xmlns.com/foaf/0.1/Organization') {\n        Map.setPin(results[i]);\n      }\n    });\n  }\n\n  function renderPaper(json) {\n\n    var results = json.results.bindings;\n    Dom.clear();\n\n    $title.html('<b>' + results[0].title.value + '</b>');\n    $peopleHeader.html('Authors/Co-authors');\n    $paperHeader.html('Paper Info');\n\n    $paperList.append('<li><b>Year</b>: ' + results[0].year.value + '</li>');\n    $paperList.append('<li><b>Homepage</b>: <a href=\"' + results[0].homepage.value + '\">here</a></li>');\n    $paperList.append('<li><b>Part Of</b>: ' + results[0].partOf.value + '</li>');\n\n    $.each(results, function (i) {\n      if (i > 0) {\n        $peopleList.append(\"<li class='list-group-item author'><a href='javascript:Poll.setHash(\\\"<\" + results[i].coauthor.value +\n          \">\\\")'>\" +\n          results[i].name.value +\n          \"</a>&nbsp;<a class='rawdata' target='_blank' title='Raw data for this author' href='\" + results[i].coauthor.value +\n          \"'>&rarr;</a></li>\");\n      }\n    });\n  }\n\n  function renderAffiliation(json) {\n    var results = json.results.bindings;\n    Dom.clear();\n\n    var data = results;\n    $title.html('<strong>' + data[0].name.value + '</strong>');\n    $peopleHeader.html('Members');\n    $paperHeader.html('Affiliation Info');\n\n    $paperList.append();\n    $paperList.append();\n    $paperList.append();\n    $paperList.append();\n  }\n\n  // Public\n  function search(input, conference) {\n    $.getJSON('/sparql', {\n      query: searchQuery(input, conference),\n      format: 'json'\n    }, function (json) {\n      renderSearch(json, input, conference);\n    });\n  }\n\n  function selectAuthor(input, conference) {\n    $.getJSON('/sparql', {\n      query: authorQuery(input, conference),\n      format: 'json'\n    }, function (json) {\n      renderAuthor(json);\n    });\n  }\n\n  function selectPaper(input, conference) {\n    $.getJSON('/sparql', {\n      query: paperQuery(input, conference),\n      format: 'json'\n    }, function (json) {\n      renderPaper(json);\n    });\n  }\n\n  function selectAffiliation(input, conference) {\n    $.getJSON('/sparql', {\n      query: affiliationQuery(input, conference),\n      format: 'json'\n    }, function (json) {\n      renderAffiliation(json);\n    });\n  }\n\n  // Render Offline Test Data\n  function testSearch() {\n    $.getJSON('./dev/testData/sample-search.json', function (json) {\n      Dom.slide('right');\n      renderSearch(json);\n    });\n  }\n\n  function testAuthor() {\n    $.getJSON('./dev/testData/sample-author.json', function (json) {\n      Dom.slide('right');\n      renderAuthor(json);\n    });\n  }\n\n  function testPaper() {\n    $.getJSON('./dev/testData/sample-paper.json', function (json) {\n      Dom.slide('right');\n      renderPaper(json);\n    });\n  }\n\n  function testAffiliation() {\n    $.getJSON('./dev/testData/sample-affiliation.json', function (json) {\n      Dom.slide('right');\n      renderAffiliation(json);\n    });\n  }\n\n  // DOM BINDINGS\n  $(document).ready(function () {\n\n    // TODO: implement both search bars\n    // SEARCH BAR\n    $('#main-form').bind('submit', function (event) {\n      // stops form submission\n      event.preventDefault();\n\n      var $text = $('#main-search').val();\n      var $conference = $('.conference').attr('data-value');\n      console.log($text);\n      if ($text.length > 1) {\n        Dom.slide('right');\n        search($text, $conference);\n        Dom.clear();\n      }\n    });\n\n    $('#nav-form').bind('submit', function (event) {\n      // stops form submission\n      event.preventDefault();\n\n      var $text = $('#nav-search').val();\n      console.log($text);\n      if ($text.length > 1) {\n        Dom.slide('right');\n        search($text);\n        Dom.clear();\n      }\n    });\n\n    // bind test functions to buttons\n    $('#testAuthor').click(function (event) {\n      event.preventDefault();\n      testAuthor();\n    });\n    $('#testPaper').click(function (event) {\n      event.preventDefault();\n      testPaper();\n    });\n  });\n\n  return {\n    // API\n    search: search,\n    selectAuthor: selectAuthor,\n    selectPaper: selectPaper,\n    selectAffiliation: selectAffiliation,\n\n    // Testing\n    testSearch: testSearch,\n    testAuthor: testAuthor,\n    testPaper: testPaper,\n    testAffiliation: testAffiliation\n  };\n})();\n"],"sourceRoot":"/source/"}